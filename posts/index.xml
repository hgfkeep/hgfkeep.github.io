<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on HGFKEEP</title>
    <link>https://hgfkeep.github.io/posts/</link>
    <description>Recent content in Posts on HGFKEEP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 26 Jun 2019 19:54:00 +0800</lastBuildDate>
    
	<atom:link href="https://hgfkeep.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>hugo静态博客</title>
      <link>https://hgfkeep.github.io/posts/hugo-blog/</link>
      <pubDate>Wed, 26 Jun 2019 19:54:00 +0800</pubDate>
      
      <guid>https://hgfkeep.github.io/posts/hugo-blog/</guid>
      <description>使用hugo创建博客  使用 hugo + asciidoc(tor)实现静态博客、代码高亮、图标等。 hugo site构建使用镜像完成。 github部署静态博客。 travis-ci 持续集成和部署。  博客样式 思路 hugo external helpers 提供外部格式化支持。通过官网给出的文档和hugo的源代码，知道hugo是根据文件后缀使用external helpers取格式化文件。
文件起始的头部描述信息和markdnwon一样。
 使用external helpers时，必须安装对应的工具，比如hugo+asciidoc(tor)就需要安装asciidoc(tor)。
 所以需要使用hugo + asciidoc(tor)编译文档时，只需要将文件后缀改成asciidoc,adoc或者ad，hugo在构建site的时候，会自动的调用外部工具编译文件。
external helpers支持情况 各类型文件后缀主持如下：
 markdown的文件：  md markdown markdown  asciidoc文件：  asciidoc adoc ad  mmark文件：  mmark  rst文件：  rdt  html文件：  htm html   配置样式 编辑hugo 根目录下面的config.toml，添加Custom CSS。
 不同的hugo主题，Custom CSS配置的相对路径也不一样。有的是相对的statis/，有的是相对的static/css。
 custom css包含两个部分：
 代码高亮。 警告、icon fonts和其他样式。  我的Custom CSS配置：custom_css = [&amp;quot;css/code.</description>
    </item>
    
    <item>
      <title>Test</title>
      <link>https://hgfkeep.github.io/posts/hgf/</link>
      <pubDate>Wed, 26 Jun 2019 12:21:02 +0800</pubDate>
      
      <guid>https://hgfkeep.github.io/posts/hgf/</guid>
      <description>格式化文本 加粗斜体等宽 加粗斜体等宽可组合叠加
 例如：
 _italic phrase_ __i__talic le__tt__ers *bold phrase* **b**old le**tt**ers *_bold italic phrase_* **__b__**old italic le**__tt__**ers `monospace phrase` and le``tt``ers `_monospace italic phrase_` and le``__tt__``ers `*monospace bold phrase*` and le``**tt**``ers `*_monospace bold italic phrase_*` and le``**__tt__**``ers   italic phrase
 italic letters
 bold phrase
 bold letters
 bold italic phrase
 bold italic letters
 monospace phrase and letters
 monospace italic phrase and letters</description>
    </item>
    
    <item>
      <title>如何使用typora编写Hugo draft</title>
      <link>https://hgfkeep.github.io/posts/how-to-write-draft-in-hugo/</link>
      <pubDate>Tue, 25 Jun 2019 16:33:26 +0800</pubDate>
      
      <guid>https://hgfkeep.github.io/posts/how-to-write-draft-in-hugo/</guid>
      <description>&lt;p&gt;本文主要讲解如何使用typora编写hugo 文章，达到本地编辑实时预览，和真正部署的结果一致。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>An Article</title>
      <link>https://hgfkeep.github.io/posts/x/</link>
      <pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hgfkeep.github.io/posts/x/</guid>
      <description>    There are things to note!
     public static void main( String args[] ) { System.out.println(&#34;Foobar!&#34;); (1) }     1 Print something    </description>
    </item>
    
    <item>
      <title>Render LaTeX using KaTeX</title>
      <link>https://hgfkeep.github.io/posts/render-latex-using-katex/</link>
      <pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hgfkeep.github.io/posts/render-latex-using-katex/</guid>
      <description>Enable katex by adding katex = &amp;quot;true&amp;quot; to the front matter
+++ katex = &amp;#34;true&amp;#34; +++ It&amp;rsquo;s almost a dropin alternative to the mathjax solution,you should just choose one of them.
Inline math looks like this
This is text with inline math $\sum_{n=1}^{\infty} 2^{-n} =1$ This is text with inline math $\sum_{n=1}^{\infty} 2^{-n} = 1$
and with math blocks:
$$\sum_{n=1}^{\infty} 2^{-n} =1$$ $$ \sum_{n=1}^{\infty} 2^{-n} = 1 $$</description>
    </item>
    
    <item>
      <title>Hugo coder wiki</title>
      <link>https://hgfkeep.github.io/posts/hugo-coder-wiki/</link>
      <pubDate>Thu, 17 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hgfkeep.github.io/posts/hugo-coder-wiki/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Dummy</title>
      <link>https://hgfkeep.github.io/posts/dummy/</link>
      <pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hgfkeep.github.io/posts/dummy/</guid>
      <description>Nada para ver aqui!</description>
    </item>
    
    <item>
      <title>Theme Demo</title>
      <link>https://hgfkeep.github.io/posts/theme-demo/</link>
      <pubDate>Sun, 08 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://hgfkeep.github.io/posts/theme-demo/</guid>
      <description>Style Demo h1 Heading h2 Heading h3 Heading h4 Heading h5 Heading h6 Heading This is bold text
This is bold text
This is italic text
This is italic text
Deleted text
This is text with inline math $\sum_{n=1}^{\infty} 2^{-n} = 1$ and with math blocks:
$$ \sum_{n=1}^{\infty} 2^{-n} = 1 $$
   Heading Another heading     text text   text text   text text     Block quotes are written like so.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://hgfkeep.github.io/posts/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hgfkeep.github.io/posts/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://hgfkeep.github.io/posts/hugo-template-primer/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hgfkeep.github.io/posts/hugo-template-primer/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://hgfkeep.github.io/posts/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hgfkeep.github.io/posts/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://hgfkeep.github.io/posts/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hgfkeep.github.io/posts/migrate-from-jekyll/</guid>
      <description>Table of Contents  Move static content to static Create your Hugo configuration file Set your configuration publish folder to site Convert Jekyll templates to Hugo templates Convert Jekyll plugins to Hugo shortcodes  Implementation Usage  Finishing Touches  Fix Content Clean Up  A practical example in a diff  Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hgfkeep.github.io/posts/hgf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hgfkeep.github.io/posts/hgf/</guid>
      <description>格式化文本  /* Asciidoctor default stylesheet | MIT License | https://asciidoctor.org */ /* Uncomment @import statement to use as custom stylesheet */ /*@import &#34;https://fonts.googleapis.com/css?family=Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDroid+Sans+Mono:400,700&#34;;*/ article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section{display:block} audio,video{display:inline-block} audio:not([controls]){display:none;height:0} html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%} a{background:none} a:focus{outline:thin dotted} a:active,a:hover{outline:0} h1{font-size:2em;margin:.67em 0} abbr[title]{border-bottom:1px dotted} b,strong{font-weight:bold} dfn{font-style:italic} hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0} mark{background:#ff0;color:#000} code,kbd,pre,samp{font-family:monospace;font-size:1em} pre{white-space:pre-wrap} q{quotes:&#34;\201C&#34; &#34;\201D&#34; &#34;\2018&#34; &#34;\2019&#34;} small{font-size:80%} sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline} sup{top:-.5em} sub{bottom:-.25em} img{border:0} svg:not(:root){overflow:hidden} figure{margin:0} fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em} legend{border:0;padding:0} button,input,select,textarea{font-family:inherit;font-size:100%;margin:0} button,input{line-height:normal} button,select{text-transform:none} button,html input[type=&#34;button&#34;],input[type=&#34;reset&#34;],input[type=&#34;submit&#34;]{-webkit-appearance:button;cursor:pointer} button[disabled],html input[disabled]{cursor:default} input[type=&#34;checkbox&#34;],input[type=&#34;radio&#34;]{box-sizing:border-box;padding:0} button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0} textarea{overflow:auto;vertical-align:top} table{border-collapse:collapse;border-spacing:0} *,*::before,*::after{-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box} html,body{font-size:100%} body{background:#fff;color:rgba(0,0,0,.</description>
    </item>
    
  </channel>
</rss>